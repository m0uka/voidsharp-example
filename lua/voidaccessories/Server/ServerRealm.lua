-- Generated by CSharp.lua Compiler
-- using VoidAccessories.Migrations;
VoidAccessoriesAutoRefreshFunc()
local System = System
local VoidSharp = VoidSharp
local VoidSharpORM = VoidSharp.ORM
local VoidAccessories
local VoidAccessoriesConfiguration
System.import(function (out)
  VoidAccessories = out.VoidAccessories
  VoidAccessoriesConfiguration = VoidAccessories.Configuration
end)
System.namespace("VoidAccessories.Server", function (namespace)
  namespace.class("ServerRealm", function (namespace)
    local Main, DatabaseTasks
    Main = function (this)
      return System.async(function (async, this)
        async:await(DatabaseTasks(this))
        async:await(VoidAccessoriesConfiguration.ConfigManager.CreateEntries(this.Database))
      end, nil, this)
    end
    DatabaseTasks = function (this)
      return System.async(function (async, this)
        this.Database = VoidSharpORM.Database(VoidSharp.SQLite())
        async:await(this.Database:Connect(System.typeof(VoidAccessories.Program)))

        -- // Handle migrations
        -- MigrationManager migrationManager = new MigrationManager();
        -- await migrationManager.UpdateMigrations(Database);
      end, nil, this)
    end
    return {
      Main = Main,
      __metadata__ = function (out)
        return {
          properties = {
            { "Database", 0x1, out.VoidSharp.ORM.Database }
          },
          methods = {
            { "DatabaseTasks", 0x81, DatabaseTasks, System.Task },
            { "Main", 0x86, Main, System.Task }
          },
          class = { 0x6 }
        }
      end
    }
  end)
end)
