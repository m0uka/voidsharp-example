-- Generated by CSharp.lua Compiler
local System = System
local VoidSharpExampleClient
local VoidSharpExampleHandlers
local VoidSharpExampleServer
local VoidSharpExampleUtilities
System.import(function (out)
  VoidSharpExampleClient = VoidSharpExample.Client
  VoidSharpExampleHandlers = VoidSharpExample.Handlers
  VoidSharpExampleServer = VoidSharpExample.Server
  VoidSharpExampleUtilities = VoidSharpExample.Utilities
end)
System.namespace("VoidSharpExample", function (namespace)
  namespace.class("Program", function (namespace)
    local Main, HandleException, Main1, OnInitialize, class
    Main = function (args)
      Main1(class()):ContinueWith(function (x)
        if x:getIsFaulted() then
          HandleException(x:getException())
        end
      end)
    end
    -- <summary>
    -- Handles an exception in async threads - it's needed because we are calling an async method from a non-async method.
    -- </summary>
    -- <param name="e"></param>
    HandleException = function (e)
      local exceptionTrace = e:getMessage() .. "\n" .. e:getStackTrace() .. "\n"
      VoidSharpExampleUtilities.Logger.LogError(exceptionTrace)
    end
    Main1 = function (this)
      return System.async(function (async, this)
        VoidSharpExampleUtilities.Logger.LogInfo("C# Example Loaded!")
        VoidSharpExampleHandlers.HookHandler.InitializeHooks(this)

        if CLIENT then
          local clientRealm = VoidSharpExampleClient.ClientRealm()
          async:await(clientRealm:Main())
        elseif SERVER then
          local serverRealm = VoidSharpExampleServer.ServerRealm()
          async:await(serverRealm:Main())
        end
      end, nil, this)
    end
    -- <summary>
    -- Gets called after all the addons are loaded.
    -- </summary>
    OnInitialize = function (this)
      VoidSharpExampleUtilities.Logger.LogInfo("Successfully initialized!")
    end
    class = {
      Main = Main,
      OnInitialize = OnInitialize,
      __metadata__ = function (out)
        return {
          methods = {
            { "OnInitialize", 0x6, OnInitialize, out.VoidSharpExample.Handlers.HookAttribute("Initialize", nil) }
          }
        }
      end
    }
    return class
  end)
end)
