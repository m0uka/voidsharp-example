-- Generated by CSharp.lua Compiler
local System = System
local Linq = System.Linq.Enumerable
System.namespace("VoidSharpExample.Handlers", function (namespace)
  namespace.class("ConCommandAttribute", function (namespace)
    local GetAllConCommandAttributes, class, __ctor__
    __ctor__ = function (this, name)
      System.base(this).__ctor__(this)
      this.Name = name
    end
    -- <summary>
    -- Gets all methods which have a ConCommand attribute.
    -- </summary>
    -- <param name="type">The type (preferably Class) to check.</param>
    -- <returns>A list of MethodInfos.</returns>
    GetAllConCommandAttributes = function (type)
      local methods = Linq.ToList(Linq.Where(Linq.ToList(type:GetMethods()), function (x)
        return #x:GetCustomAttributes(System.typeof(class), false) > 0
      end))

      return methods
    end
    class = {
      base = function (out)
        return {
          System.Attribute
        }
      end,
      GetAllConCommandAttributes = GetAllConCommandAttributes,
      __ctor__ = __ctor__
    }
    return class
  end)
end)
